metrics_junk_test <- calculate_test_metrics(junk.model, test.df)
# Print the metrics for comparison
print(list("Forward Selection Test Metrics" = metrics_forward_test,
"Backward Elimination Test Metrics" = metrics_backward_test,
"Stepwise Selection Test Metrics" = metrics_stepwise_test,
"Junk Model Test Metrics" = metrics_junk_test))
View(clean.data)
library(readxl)
library(dplyr)
library(randomForest)
library(vip)
library(caret)
library(MASS)
library(car)
# install.packages(MASS)
data <- read_excel("ames_housing_data.xlsx")
#Ive decided to create a new sample population, since I've learned a lot, and I know how to
#prepare the data. This also gives me a chance to practice the whole process again.
#My drop requirements, changed a bit so I will reiterate that they are single family homes
#That are ranches. This means, 1 floor. 1 Family, no pools, no misc features.
#No fences
#Finding the categorical variables
# Check the structure of your data to identify potential categorical columns
data_filtered <- data %>%
filter(BldgType == "1Fam", HouseStyle %in% c("1Story"),
PoolArea == 0)
str(data)
# Use sapply to go through each column and check its class
categorical_vars <- sapply(data, function(x) is.factor(x) | is.character(x))
# Get names of categorical variables
categorical_vars_names <- names(data)[categorical_vars]
summary_stats_by_cat <- function(data, cat_var) {
data %>%
group_by(!!sym(cat_var)) %>%
summarise(
Mean = mean(SalePrice, na.rm = TRUE),
Median = median(SalePrice, na.rm = TRUE),
StdDev = sd(SalePrice, na.rm = TRUE),
Min = min(SalePrice, na.rm = TRUE),
Max = max(SalePrice, na.rm = TRUE),
DiffBetweenMaxMin = max(SalePrice, na.rm = TRUE) - min(SalePrice, na.rm = TRUE),
Count = n()
)
}
categorical_vars_names <- names(data_filtered)[sapply(data_filtered, function(x) is.factor(x) | is.character(x))]
for(cat_var in categorical_vars_names) {
cat_stats <- summary_stats_by_cat(data_filtered, cat_var)
print(cat_stats) # Or save the stats to a list or file for later use
}
selected_cat_vars <- c("LotConfig", "Neighborhood", "Condition1", "Condition2", "GarageType",
"GarageArea", "GarageCond", "PavedDrive", "BsmtFinType1", "BsmtExposure")
selected_ord_vars <- c("ExterQual","ExterCond","KitchenQual", "FireplaceQu", "GarageQual", "BsmtQual",
"BsmtCond")
selected_num_vars <- c("LotFrontage", "LotArea", "OverallQual", "OverallCond", "YearBuilt", "YearRemodel",
"MasVnrArea", "BsmtFinSF1", "BsmtFinSF2", "BsmtUnfSF", "TotalBsmtSF", "FirstFlrSF",
"LowQualFinSF", "GrLivArea", "BsmtFullBath", "BsmtHalfBath", "FullBath",
"HalfBath", "BedroomAbvGr", "KitchenAbvGr", "TotRmsAbvGrd", "Fireplaces", "GarageYrBlt",
"GarageCars", "WoodDeckSF", "OpenPorchSF", "EnclosedPorch", "ThreeSsnPorch", "ScreenPorch",
"MoSold", "YrSold", "SalePrice")
#Recode ord vars to 0 being lowest
for (var in selected_ord_vars) {
data_filtered <- data_filtered %>%
mutate(!!var := recode(!!sym(var), "Ex" = 5, "Gd" = 4, "TA" = 3, "Fa" = 2, "Po" = 1, "NA" = 0))
}
library(readxl)
library(dplyr)
library(randomForest)
library(vip)
library(caret)
library(MASS)
library(car)
# install.packages(MASS)
data <- read_excel("ames_housing_data.xlsx")
#Ive decided to create a new sample population, since I've learned a lot, and I know how to
#prepare the data. This also gives me a chance to practice the whole process again.
#My drop requirements, changed a bit so I will reiterate that they are single family homes
#That are ranches. This means, 1 floor. 1 Family, no pools, no misc features.
#No fences
#Finding the categorical variables
# Check the structure of your data to identify potential categorical columns
data_filtered <- data %>%
filter(BldgType == "1Fam", HouseStyle %in% c("1Story"),
PoolArea == 0)
str(data)
# Use sapply to go through each column and check its class
categorical_vars <- sapply(data, function(x) is.factor(x) | is.character(x))
# Get names of categorical variables
categorical_vars_names <- names(data)[categorical_vars]
summary_stats_by_cat <- function(data, cat_var) {
data %>%
group_by(!!sym(cat_var)) %>%
summarise(
Mean = mean(SalePrice, na.rm = TRUE),
Median = median(SalePrice, na.rm = TRUE),
StdDev = sd(SalePrice, na.rm = TRUE),
Min = min(SalePrice, na.rm = TRUE),
Max = max(SalePrice, na.rm = TRUE),
DiffBetweenMaxMin = max(SalePrice, na.rm = TRUE) - min(SalePrice, na.rm = TRUE),
Count = n()
)
}
categorical_vars_names <- names(data_filtered)[sapply(data_filtered, function(x) is.factor(x) | is.character(x))]
for(cat_var in categorical_vars_names) {
cat_stats <- summary_stats_by_cat(data_filtered, cat_var)
print(cat_stats) # Or save the stats to a list or file for later use
}
selected_cat_vars <- c("LotConfig", "Neighborhood", "Condition1", "Condition2", "GarageType",
"GarageArea", "GarageCond", "PavedDrive", "BsmtFinType1", "BsmtExposure")
selected_ord_vars <- c("ExterCond","KitchenQual", "FireplaceQu", "GarageQual", "BsmtQual",
"BsmtCond")
selected_num_vars <- c("LotFrontage", "LotArea", "OverallQual", "OverallCond", "YearBuilt", "YearRemodel",
"MasVnrArea", "BsmtFinSF1", "BsmtFinSF2", "BsmtUnfSF", "TotalBsmtSF", "FirstFlrSF",
"LowQualFinSF", "GrLivArea", "BsmtFullBath", "BsmtHalfBath", "FullBath",
"HalfBath", "BedroomAbvGr", "KitchenAbvGr", "TotRmsAbvGrd", "Fireplaces", "GarageYrBlt",
"GarageCars", "WoodDeckSF", "OpenPorchSF", "EnclosedPorch", "ThreeSsnPorch", "ScreenPorch",
"MoSold", "YrSold", "SalePrice")
#Recode ord vars to 0 being lowest
for (var in selected_ord_vars) {
data_filtered <- data_filtered %>%
mutate(!!var := recode(!!sym(var), "Ex" = 5, "Gd" = 4, "TA" = 3, "Fa" = 2, "Po" = 1, "NA" = 0))
}
library(readxl)
library(dplyr)
library(randomForest)
library(vip)
library(caret)
library(MASS)
library(car)
# install.packages(MASS)
data <- read_excel("ames_housing_data.xlsx")
#Ive decided to create a new sample population, since I've learned a lot, and I know how to
#prepare the data. This also gives me a chance to practice the whole process again.
#My drop requirements, changed a bit so I will reiterate that they are single family homes
#That are ranches. This means, 1 floor. 1 Family, no pools, no misc features.
#No fences
#Finding the categorical variables
# Check the structure of your data to identify potential categorical columns
data_filtered <- data %>%
filter(BldgType == "1Fam", HouseStyle %in% c("1Story"),
PoolArea == 0)
str(data)
# Use sapply to go through each column and check its class
categorical_vars <- sapply(data, function(x) is.factor(x) | is.character(x))
# Get names of categorical variables
categorical_vars_names <- names(data)[categorical_vars]
summary_stats_by_cat <- function(data, cat_var) {
data %>%
group_by(!!sym(cat_var)) %>%
summarise(
Mean = mean(SalePrice, na.rm = TRUE),
Median = median(SalePrice, na.rm = TRUE),
StdDev = sd(SalePrice, na.rm = TRUE),
Min = min(SalePrice, na.rm = TRUE),
Max = max(SalePrice, na.rm = TRUE),
DiffBetweenMaxMin = max(SalePrice, na.rm = TRUE) - min(SalePrice, na.rm = TRUE),
Count = n()
)
}
categorical_vars_names <- names(data_filtered)[sapply(data_filtered, function(x) is.factor(x) | is.character(x))]
for(cat_var in categorical_vars_names) {
cat_stats <- summary_stats_by_cat(data_filtered, cat_var)
print(cat_stats) # Or save the stats to a list or file for later use
}
selected_cat_vars <- c("LotConfig", "Neighborhood", "Condition1", "Condition2", "GarageType",
"GarageArea", "GarageCond", "PavedDrive", "BsmtFinType1", "BsmtExposure")
selected_ord_vars <- c("KitchenQual", "FireplaceQu", "GarageQual", "BsmtQual",
"BsmtCond")
selected_num_vars <- c("LotFrontage", "LotArea", "OverallQual", "OverallCond", "YearBuilt", "YearRemodel",
"MasVnrArea", "BsmtFinSF1", "BsmtFinSF2", "BsmtUnfSF", "TotalBsmtSF", "FirstFlrSF",
"LowQualFinSF", "GrLivArea", "BsmtFullBath", "BsmtHalfBath", "FullBath",
"HalfBath", "BedroomAbvGr", "KitchenAbvGr", "TotRmsAbvGrd", "Fireplaces", "GarageYrBlt",
"GarageCars", "WoodDeckSF", "OpenPorchSF", "EnclosedPorch", "ThreeSsnPorch", "ScreenPorch",
"MoSold", "YrSold", "SalePrice")
#Recode ord vars to 0 being lowest
for (var in selected_ord_vars) {
data_filtered <- data_filtered %>%
mutate(!!var := recode(!!sym(var), "Ex" = 5, "Gd" = 4, "TA" = 3, "Fa" = 2, "Po" = 1, "NA" = 0))
}
library(readxl)
library(dplyr)
library(randomForest)
library(vip)
library(caret)
library(MASS)
library(car)
# install.packages(MASS)
data <- read_excel("ames_housing_data.xlsx")
#Ive decided to create a new sample population, since I've learned a lot, and I know how to
#prepare the data. This also gives me a chance to practice the whole process again.
#My drop requirements, changed a bit so I will reiterate that they are single family homes
#That are ranches. This means, 1 floor. 1 Family, no pools, no misc features.
#No fences
#Finding the categorical variables
# Check the structure of your data to identify potential categorical columns
data_filtered <- data %>%
filter(BldgType == "1Fam", HouseStyle %in% c("1Story"),
PoolArea == 0)
str(data)
# Use sapply to go through each column and check its class
categorical_vars <- sapply(data, function(x) is.factor(x) | is.character(x))
# Get names of categorical variables
categorical_vars_names <- names(data)[categorical_vars]
summary_stats_by_cat <- function(data, cat_var) {
data %>%
group_by(!!sym(cat_var)) %>%
summarise(
Mean = mean(SalePrice, na.rm = TRUE),
Median = median(SalePrice, na.rm = TRUE),
StdDev = sd(SalePrice, na.rm = TRUE),
Min = min(SalePrice, na.rm = TRUE),
Max = max(SalePrice, na.rm = TRUE),
DiffBetweenMaxMin = max(SalePrice, na.rm = TRUE) - min(SalePrice, na.rm = TRUE),
Count = n()
)
}
categorical_vars_names <- names(data_filtered)[sapply(data_filtered, function(x) is.factor(x) | is.character(x))]
for(cat_var in categorical_vars_names) {
cat_stats <- summary_stats_by_cat(data_filtered, cat_var)
print(cat_stats) # Or save the stats to a list or file for later use
}
selected_cat_vars <- c("LotConfig", "Neighborhood", "Condition1", "Condition2", "GarageType",
"GarageArea", "GarageCond", "PavedDrive", "BsmtFinType1", "BsmtExposure")
selected_ord_vars <- c("ExterQual","ExterCond","KitchenQual", "FireplaceQu", "GarageQual", "BsmtQual",
"BsmtCond")
selected_num_vars <- c("LotFrontage", "LotArea", "OverallQual", "OverallCond", "YearBuilt", "YearRemodel",
"MasVnrArea", "BsmtFinSF1", "BsmtFinSF2", "BsmtUnfSF", "TotalBsmtSF", "FirstFlrSF",
"LowQualFinSF", "GrLivArea", "BsmtFullBath", "BsmtHalfBath", "FullBath",
"HalfBath", "BedroomAbvGr", "KitchenAbvGr", "TotRmsAbvGrd", "Fireplaces", "GarageYrBlt",
"GarageCars", "WoodDeckSF", "OpenPorchSF", "EnclosedPorch", "ThreeSsnPorch", "ScreenPorch",
"MoSold", "YrSold", "SalePrice")
for (var in selected_ord_vars) {
data_filtered <- data_filtered %>%
mutate(!!var := recode(!!sym(var), "Ex" = 5, "Gd" = 4, "TA" = 3, "Fa" = 2, "Po" = 1, "NA" = 0))
}
for (var in selected_ord_vars) {
data_filtered <- data_filtered %>%
mutate(!!sym(var) := forcats::fct_recode(!!sym(var),
"0" = "NA", # Convert character "NA" to a factor level if necessary
"5" = "Ex",
"4" = "Gd",
"3" = "TA",
"2" = "Fa",
"1" = "Po"))
}
library(readxl)
library(dplyr)
library(randomForest)
library(vip)
library(caret)
library(MASS)
library(car)
# install.packages(MASS)
data <- read_excel("ames_housing_data.xlsx")
#Ive decided to create a new sample population, since I've learned a lot, and I know how to
#prepare the data. This also gives me a chance to practice the whole process again.
#My drop requirements, changed a bit so I will reiterate that they are single family homes
#That are ranches. This means, 1 floor. 1 Family, no pools, no misc features.
#No fences
#Finding the categorical variables
# Check the structure of your data to identify potential categorical columns
data_filtered <- data %>%
filter(BldgType == "1Fam", HouseStyle %in% c("1Story"),
PoolArea == 0)
str(data)
# Use sapply to go through each column and check its class
categorical_vars <- sapply(data, function(x) is.factor(x) | is.character(x))
# Get names of categorical variables
categorical_vars_names <- names(data)[categorical_vars]
summary_stats_by_cat <- function(data, cat_var) {
data %>%
group_by(!!sym(cat_var)) %>%
summarise(
Mean = mean(SalePrice, na.rm = TRUE),
Median = median(SalePrice, na.rm = TRUE),
StdDev = sd(SalePrice, na.rm = TRUE),
Min = min(SalePrice, na.rm = TRUE),
Max = max(SalePrice, na.rm = TRUE),
DiffBetweenMaxMin = max(SalePrice, na.rm = TRUE) - min(SalePrice, na.rm = TRUE),
Count = n()
)
}
categorical_vars_names <- names(data_filtered)[sapply(data_filtered, function(x) is.factor(x) | is.character(x))]
for(cat_var in categorical_vars_names) {
cat_stats <- summary_stats_by_cat(data_filtered, cat_var)
print(cat_stats) # Or save the stats to a list or file for later use
}
selected_cat_vars <- c("LotConfig", "Neighborhood", "Condition1", "Condition2", "GarageType",
"GarageArea", "GarageCond", "PavedDrive", "BsmtFinType1", "BsmtExposure")
selected_ord_vars <- c("ExterQual","ExterCond","KitchenQual", "FireplaceQu", "GarageQual", "BsmtQual",
"BsmtCond")
selected_num_vars <- c("LotFrontage", "LotArea", "OverallQual", "OverallCond", "YearBuilt", "YearRemodel",
"MasVnrArea", "BsmtFinSF1", "BsmtFinSF2", "BsmtUnfSF", "TotalBsmtSF", "FirstFlrSF",
"LowQualFinSF", "GrLivArea", "BsmtFullBath", "BsmtHalfBath", "FullBath",
"HalfBath", "BedroomAbvGr", "KitchenAbvGr", "TotRmsAbvGrd", "Fireplaces", "GarageYrBlt",
"GarageCars", "WoodDeckSF", "OpenPorchSF", "EnclosedPorch", "ThreeSsnPorch", "ScreenPorch",
"MoSold", "YrSold", "SalePrice")
#Recode ord vars to 0 being lowest
for (var in selected_ord_vars) {
data_filtered <- data_filtered %>%
mutate(!!sym(var) := forcats::fct_recode(!!sym(var),
"0" = "NA", # Convert character "NA" to a factor level if necessary
"5" = "Ex",
"4" = "Gd",
"3" = "TA",
"2" = "Fa",
"1" = "Po"))
}
#Only select integer columns from data_filtered and those in cat and ord vars
selected_vars <- c(selected_cat_vars, selected_ord_vars, selected_num_vars)
data_filtered <- data_filtered %>%
select(SalePrice, selected_vars)
library(readxl)
library(dplyr)
library(randomForest)
library(vip)
library(caret)
library(MASS)
library(car)
# install.packages(MASS)
data <- read_excel("ames_housing_data.xlsx")
#Ive decided to create a new sample population, since I've learned a lot, and I know how to
#prepare the data. This also gives me a chance to practice the whole process again.
#My drop requirements, changed a bit so I will reiterate that they are single family homes
#That are ranches. This means, 1 floor. 1 Family, no pools, no misc features.
#No fences
#Finding the categorical variables
# Check the structure of your data to identify potential categorical columns
data_filtered <- data %>%
filter(BldgType == "1Fam", HouseStyle %in% c("1Story"),
PoolArea == 0)
str(data)
# Use sapply to go through each column and check its class
categorical_vars <- sapply(data, function(x) is.factor(x) | is.character(x))
# Get names of categorical variables
categorical_vars_names <- names(data)[categorical_vars]
summary_stats_by_cat <- function(data, cat_var) {
data %>%
group_by(!!sym(cat_var)) %>%
summarise(
Mean = mean(SalePrice, na.rm = TRUE),
Median = median(SalePrice, na.rm = TRUE),
StdDev = sd(SalePrice, na.rm = TRUE),
Min = min(SalePrice, na.rm = TRUE),
Max = max(SalePrice, na.rm = TRUE),
DiffBetweenMaxMin = max(SalePrice, na.rm = TRUE) - min(SalePrice, na.rm = TRUE),
Count = n()
)
}
categorical_vars_names <- names(data_filtered)[sapply(data_filtered, function(x) is.factor(x) | is.character(x))]
for(cat_var in categorical_vars_names) {
cat_stats <- summary_stats_by_cat(data_filtered, cat_var)
print(cat_stats) # Or save the stats to a list or file for later use
}
selected_cat_vars <- c("LotConfig", "Neighborhood", "Condition1", "Condition2", "GarageType",
"GarageArea", "GarageCond", "PavedDrive", "BsmtFinType1", "BsmtExposure")
selected_ord_vars <- c("ExterQual","ExterCond","KitchenQual", "FireplaceQu", "GarageQual", "BsmtQual",
"BsmtCond")
selected_num_vars <- c("LotFrontage", "LotArea", "OverallQual", "OverallCond", "YearBuilt", "YearRemodel",
"MasVnrArea", "BsmtFinSF1", "BsmtFinSF2", "BsmtUnfSF", "TotalBsmtSF", "FirstFlrSF",
"LowQualFinSF", "GrLivArea", "BsmtFullBath", "BsmtHalfBath", "FullBath",
"HalfBath", "BedroomAbvGr", "KitchenAbvGr", "TotRmsAbvGrd", "Fireplaces", "GarageYrBlt",
"GarageCars", "WoodDeckSF", "OpenPorchSF", "EnclosedPorch", "ThreeSsnPorch", "ScreenPorch",
"MoSold", "YrSold", "SalePrice")
#Recode ord vars to 0 being lowest
for (var in selected_ord_vars) {
data_filtered <- data_filtered %>%
mutate(!!sym(var) := forcats::fct_recode(!!sym(var),
"0" = "NA", # Convert character "NA" to a factor level if necessary
"5" = "Ex",
"4" = "Gd",
"3" = "TA",
"2" = "Fa",
"1" = "Po"))
}
#Only select integer columns from data_filtered and those in cat and ord vars
selected_vars <- c(selected_cat_vars, selected_ord_vars, selected_num_vars)
data_filtered <- data_filtered %>%
select(SalePrice, selected_vars)
library(readxl)
library(dplyr)
library(randomForest)
library(vip)
library(caret)
library(MASS)
library(car)
# install.packages(MASS)
data <- read_excel("ames_housing_data.xlsx")
#Ive decided to create a new sample population, since I've learned a lot, and I know how to
#prepare the data. This also gives me a chance to practice the whole process again.
#My drop requirements, changed a bit so I will reiterate that they are single family homes
#That are ranches. This means, 1 floor. 1 Family, no pools, no misc features.
#No fences
#Finding the categorical variables
# Check the structure of your data to identify potential categorical columns
data_filtered <- data %>%
filter(BldgType == "1Fam", HouseStyle %in% c("1Story"),
PoolArea == 0)
str(data)
# Use sapply to go through each column and check its class
categorical_vars <- sapply(data, function(x) is.factor(x) | is.character(x))
# Get names of categorical variables
categorical_vars_names <- names(data)[categorical_vars]
summary_stats_by_cat <- function(data, cat_var) {
data %>%
group_by(!!sym(cat_var)) %>%
summarise(
Mean = mean(SalePrice, na.rm = TRUE),
Median = median(SalePrice, na.rm = TRUE),
StdDev = sd(SalePrice, na.rm = TRUE),
Min = min(SalePrice, na.rm = TRUE),
Max = max(SalePrice, na.rm = TRUE),
DiffBetweenMaxMin = max(SalePrice, na.rm = TRUE) - min(SalePrice, na.rm = TRUE),
Count = n()
)
}
categorical_vars_names <- names(data_filtered)[sapply(data_filtered, function(x) is.factor(x) | is.character(x))]
for(cat_var in categorical_vars_names) {
cat_stats <- summary_stats_by_cat(data_filtered, cat_var)
print(cat_stats) # Or save the stats to a list or file for later use
}
selected_cat_vars <- c("LotConfig", "Neighborhood", "Condition1", "Condition2", "GarageType",
"GarageArea", "GarageCond", "PavedDrive", "BsmtFinType1", "BsmtExposure")
selected_ord_vars <- c("ExterQual","ExterCond","KitchenQual", "FireplaceQu", "GarageQual", "BsmtQual",
"BsmtCond")
selected_num_vars <- c("LotFrontage", "LotArea", "OverallQual", "OverallCond", "YearBuilt", "YearRemodel",
"MasVnrArea", "BsmtFinSF1", "BsmtFinSF2", "BsmtUnfSF", "TotalBsmtSF", "FirstFlrSF",
"LowQualFinSF", "GrLivArea", "BsmtFullBath", "BsmtHalfBath", "FullBath",
"HalfBath", "BedroomAbvGr", "KitchenAbvGr", "TotRmsAbvGrd", "Fireplaces", "GarageYrBlt",
"GarageCars", "WoodDeckSF", "OpenPorchSF", "EnclosedPorch", "ThreeSsnPorch", "ScreenPorch",
"MoSold", "YrSold", "SalePrice")
#Recode ord vars to 0 being lowest
for (var in selected_ord_vars) {
data_filtered <- data_filtered %>%
mutate(!!sym(var) := forcats::fct_recode(!!sym(var),
"0" = "NA", # Convert character "NA" to a factor level if necessary
"5" = "Ex",
"4" = "Gd",
"3" = "TA",
"2" = "Fa",
"1" = "Po"))
}
#Only select integer columns from data_filtered and those in cat and ord vars
selected_vars <- c(selected_cat_vars, selected_ord_vars, selected_num_vars)
data_filtered <- data_filtered %>%
select(SalePrice, selected_vars)
library(readxl)
library(dplyr)
library(randomForest)
library(vip)
library(caret)
library(MASS)
library(car)
# install.packages(MASS)
data <- read_excel("ames_housing_data.xlsx")
#Ive decided to create a new sample population, since I've learned a lot, and I know how to
#prepare the data. This also gives me a chance to practice the whole process again.
#My drop requirements, changed a bit so I will reiterate that they are single family homes
#That are ranches. This means, 1 floor. 1 Family, no pools, no misc features.
#No fences
#Finding the categorical variables
# Check the structure of your data to identify potential categorical columns
data_filtered <- data %>%
filter(BldgType == "1Fam", HouseStyle %in% c("1Story"),
PoolArea == 0)
str(data)
# Use sapply to go through each column and check its class
categorical_vars <- sapply(data, function(x) is.factor(x) | is.character(x))
# Get names of categorical variables
categorical_vars_names <- names(data)[categorical_vars]
summary_stats_by_cat <- function(data, cat_var) {
data %>%
group_by(!!sym(cat_var)) %>%
summarise(
Mean = mean(SalePrice, na.rm = TRUE),
Median = median(SalePrice, na.rm = TRUE),
StdDev = sd(SalePrice, na.rm = TRUE),
Min = min(SalePrice, na.rm = TRUE),
Max = max(SalePrice, na.rm = TRUE),
DiffBetweenMaxMin = max(SalePrice, na.rm = TRUE) - min(SalePrice, na.rm = TRUE),
Count = n()
)
}
categorical_vars_names <- names(data_filtered)[sapply(data_filtered, function(x) is.factor(x) | is.character(x))]
for(cat_var in categorical_vars_names) {
cat_stats <- summary_stats_by_cat(data_filtered, cat_var)
print(cat_stats) # Or save the stats to a list or file for later use
}
selected_cat_vars <- c("LotConfig", "Neighborhood", "Condition1", "Condition2", "GarageType",
"GarageArea", "GarageCond", "PavedDrive", "BsmtFinType1", "BsmtExposure")
selected_ord_vars <- c("ExterQual","ExterCond","KitchenQual", "FireplaceQu", "GarageQual", "BsmtQual",
"BsmtCond")
selected_num_vars <- c("LotFrontage", "LotArea", "OverallQual", "OverallCond", "YearBuilt", "YearRemodel",
"MasVnrArea", "BsmtFinSF1", "BsmtFinSF2", "BsmtUnfSF", "TotalBsmtSF", "FirstFlrSF",
"LowQualFinSF", "GrLivArea", "BsmtFullBath", "BsmtHalfBath", "FullBath",
"HalfBath", "BedroomAbvGr", "KitchenAbvGr", "TotRmsAbvGrd", "Fireplaces", "GarageYrBlt",
"GarageCars", "WoodDeckSF", "OpenPorchSF", "EnclosedPorch", "ThreeSsnPorch", "ScreenPorch",
"MoSold", "YrSold", "SalePrice")
#Recode ord vars to 0 being lowest
for (var in selected_ord_vars) {
data_filtered <- data_filtered %>%
mutate(!!sym(var) := forcats::fct_recode(!!sym(var),
"0" = "NA", # Convert character "NA" to a factor level if necessary
"5" = "Ex",
"4" = "Gd",
"3" = "TA",
"2" = "Fa",
"1" = "Po"))
}
#Only select integer columns from data_filtered and those in cat and ord vars
selected_vars <- c(selected_cat_vars, selected_ord_vars, selected_num_vars)
data_filtered <- data_filtered %>%
select(SalePrice, selected_vars)
